<%= render 'layouts/header' %>
<!DOCTYPE html>
<html>
  <head>
    <title>Place Autocomplete Address Form</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

    </style>
    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
    <style>
      #locationField, #desfield, #controls {
        position: relative;
        width: 480px;
      }
      #autocomplete {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 99%;
      }
      #autocomplete1 {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 99%;
      }
      .label {
        text-align: right;
        font-weight: bold;
        width: 100px;
        color: #303030;
        font-family: "Roboto";
      }
      #address {
        border: 1px solid #000090;
        background-color: #f0f9ff;
        width: 480px;
        padding-right: 2px;
      }
      #address td {
        font-size: 10pt;
      }
      .field {
        width: 99%;
      }
      .slimField {
        width: 80px;
      }
      .wideField {
        width: 200px;
      }
      #locationField {
        height: 20px;
        margin-bottom: 2px;
      }
      #desfield {
        height: 20px;
        margin-bottom: 2px;
      }
    </style>
  </head>

  <body style="border-bottom: none !important">


    <br>
    <br>


    <div class="row col-md-12">

      <!-- Nav tabs -->
      <ul class="nav nav-tabs" role="tablist">
        <li role="presentation"><a href="#inner" aria-controls="inner" role="tab" data-turbolinks="false">Inner</a></li>
        <li role="presentation" class="active">
          <a href="#outer" aria-controls="outer" role="tab" data-turbolinks="false">Arterial</a>
        </li>

      </ul>

      <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade in" id="outer">
          <div class="col-md-3"></div>
          <div class="row col-md-6">
            <div class="card">
              <div class="card-body">
                  <!-- Form subscription -->
                  <%= form_tag({:controller=>"application", :action=>"find_outer"}, method: :get) do %>
                      <h3 class="text-center font-bold py-4"><strong>Arterial</strong></h3>
                      <div class="col-md-6 form-group" style="padding-left: 6px;">
                                                          
                          <%= select_tag :source, options_for_select(['Please select', 'Andheri East', 'Ville Parle', 'Santacruz East', 'Vakola Flyover', 'Bandra East']), class: 'form-control' %>
                      </div>
                      <br>
                      <br>
                      <br>
                      <div class="col-md-6 form-group" style="padding-left: 6px;">
                                                          
                          <%= select_tag :destination, options_for_select(['Please select', 'Andheri', 'Ville Parle', 'Santacruz East', 'Vakola Flyover', 'Bandra East']), class: 'form-control' %>
                      </div>

                      <br>
                      <br>
                      <br>
                      <div class="col-md-6 form-group" style="padding-left: 6px;">
                                                          
                          <%= select_tag :seats, options_for_select(['Please select the no of seats', 1,2,3]), class: 'form-control' %>
                      </div>
                      <br>
                      <br>
                      <br>
                      <div class="text-center py-4">
                          <!-- <button class="btn btn-indigo">Find Auto <i class="fa fa-paper-plane-o ml-1"></i></button> -->
                          <%= submit_tag 'Find Auto', name: nil, class: "btn btn-indigo" %>
                      </div>
                  <% end %>
                  <!-- Form subscription -->
              </div>
    </div>
        </div>
        </div>
        <div role="tabpanel" class="tab-pane fade in active" id="inner">
          <div class="col-md-3"></div>
          <div class="row col-md-6">
            <div class="card">
              <div class="card-body">
                  <!-- Form subscription -->
                  <%= form_tag({:controller=>"application", :action=>"find_autos"}, method: :get) do %>
                      <h3 class="text-center font-bold py-4"><strong>Point to Point</strong></h3>
                      <div class="md-form">
                          <i class="fa fa-user prefix white-text"></i>
                          <%= text_field_tag :source, nil, style: 'border-bottom: none; margin-left: 1rem;' ,id: 'autocomplete', :onFocus => 'geolocate()', placeholder: 'Enter Source' %>
                         
                      </div>
                      <br>
                      <br>
                      <br>
                      <div class="md-form">
                          <i class="fa fa-envelope prefix white-text"></i>
                          <%= text_field_tag :destination, nil, style: 'border-bottom: none; margin-left: 1rem;', id: 'autocomplete1', :onFocus => 'geolocate()', placeholder: 'Enter destination' %>

                          
                      </div>

                      <br>
                      <br>
                      <br>
                      <div class="col-md-6 form-group" style="padding-left: 6px;">
                                                          
                          <%= select_tag :seats, options_for_select(['Please select the no of seats', 1,2,3]), class: 'form-control' %>
                      </div>
                      <br>
                      <br>
                      <br>
                      <div class="text-center py-4">
                          <!-- <button class="btn btn-indigo">Find Auto <i class="fa fa-paper-plane-o ml-1"></i></button> -->
                          <%= submit_tag 'Find Auto', name: nil, class: "btn btn-indigo" %>
                      </div>
                  <% end %>
                  <!-- Form subscription -->
              </div>
    </div>
        </div>
      </div>
</div>


    <!-- Note: The address components in this sample are typical. You might need to adjust them for
               the locations relevant to your app. For more information, see
         https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
    -->

<!--     <table id="address">
      <tr>
        <td class="label">Street address</td>
        <td class="slimField"><input class="field" id="street_number" disabled="true"/></td>
        <td class="wideField" colspan="2"><input class="field" id="route" disabled="true"/></td>
      </tr>
      <tr>
        <td class="label">City</td>
        <td class="wideField" colspan="3"><input class="field" id="locality" disabled="true"/></td>
      </tr>
      <tr>
        <td class="label">State</td>
        <td class="slimField"><input class="field" id="administrative_area_level_1" disabled="true"/></td>
        <td class="label">Zip code</td>
        <td class="wideField"><input class="field" id="postal_code" disabled="true"/></td>
      </tr>
      <tr>
        <td class="label">Country</td>
        <td class="wideField" colspan="3"><input class="field" id="country" disabled="true"/></td>
      </tr>
    </table> -->

    <script>
// This sample uses the Autocomplete widget to help the user select a
// place, then it retrieves the address components associated with that
// place, and then it populates the form fields with those details.
// This sample requires the Places library. Include the libraries=places
// parameter when you first load the API. For example:
// <script
// src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

var placeSearch, autocomplete, autocomplete1;

// var componentForm = {
//   street_number: 'short_name',
//   route: 'long_name',
//   locality: 'long_name',
//   administrative_area_level_1: 'short_name',
//   country: 'long_name',
//   postal_code: 'short_name'
// };

function initAutocomplete() {
  // Create the autocomplete object, restricting the search predictions to
  // geographical location types.
  autocomplete = new google.maps.places.Autocomplete(
      document.getElementById('autocomplete'), {types: ['geocode']});

  // Avoid paying for data that you don't need by restricting the set of
  // place fields that are returned to just the address components.
  autocomplete.setFields('address_components');

  // When the user selects an address from the drop-down, populate the
  // address fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);

  autocomplete1 = new google.maps.places.Autocomplete(
      document.getElementById('autocomplete1'), {types: ['geocode']});

  // Avoid paying for data that you don't need by restricting the set of
  // place fields that are returned to just the address components.
  autocomplete1.setFields('address_components');

  // When the user selects an address from the drop-down, populate the
  // address fields in the form.
  autocomplete1.addListener('place_changed', fillInAddress);
}

function initAutocomplete1() {
  // Create the autocomplete object, restricting the search predictions to
  // geographical location types.
  autocomplete = new google.maps.places.Autocomplete(
      document.getElementById('autocomplete1'), {types: ['geocode']});

  // Avoid paying for data that you don't need by restricting the set of
  // place fields that are returned to just the address components.
  autocomplete.setFields('address_components');

  // When the user selects an address from the drop-down, populate the
  // address fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
}

function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details,
  // and then fill-in the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}

// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
// Material Select Initialization
$(document).onload(function() {
 $('.mdb-select').materialSelect();
});
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle(
          {center: geolocation, radius: position.coords.accuracy});
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCAL4sWyluBv6G1UEh60L6E7Pau5A6Ogqo&libraries=places&callback=initAutocomplete"
        async defer></script>
  </body>
</html>